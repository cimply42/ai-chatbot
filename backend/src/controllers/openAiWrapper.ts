import OpenAI from "openai";
import {
  ChatCompletion,
  ChatCompletionMessageParam,
  ChatCompletionMessageToolCall,
  ChatCompletionTool,
} from "openai/resources";
import { getCurrentWeather } from "./weatherApi";
import { getCurrentExchangeRate } from "./exchangeRateApi";

const openai = new OpenAI();

const tools: ChatCompletionTool[] = [
  {
    type: "function",
    function: {
      name: "getCurrentWeather",
      description: "Get the current weather",
      parameters: {
        type: "object",
        properties: {
          location: {
            type: "string",
            description: "The city and state, e.g. Portland, Maine",
          },
          format: {
            type: "string",
            enum: ["celsius", "fahrenheit"],
            description:
              "The temperature unit to use. You can infer this from the users location.",
          },
        },
        required: ["location", "format"],
      },
    },
  },
  {
    type: "function",
    function: {
      name: "getCurrentExchangeRate",
      description: "Get current exchange rate",
      parameters: {
        type: "object",
        properties: {
          baseCurrency: {
            type: "string",
            enum: [
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BZD",
              "CAD",
              "CDF",
              "CHF",
              "CLP",
              "CNY",
              "COP",
              "CRC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "EUR",
              "FJD",
              "FKP",
              "FOK",
              "GBP",
              "GEL",
              "GGP",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "IMP",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JEP",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KID",
              "KMF",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRU",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SHP",
              "SLE",
              "SOS",
              "SRD",
              "SSP",
              "STN",
              "SYP",
              "SZL",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TVD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "UYU",
              "UZS",
              "VES",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XCD",
              "XDR",
              "XOF",
              "XPF",
              "YER",
              "ZAR",
              "ZMW",
              "ZWL",
            ],
            description:
              "Base currency code. You can infer this from the users request.",
          },
          targetCurrency: {
            type: "string",
            enum: [
              "AED",
              "AFN",
              "ALL",
              "AMD",
              "ANG",
              "AOA",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BAM",
              "BBD",
              "BDT",
              "BGN",
              "BHD",
              "BIF",
              "BMD",
              "BND",
              "BOB",
              "BRL",
              "BSD",
              "BTN",
              "BWP",
              "BYN",
              "BZD",
              "CAD",
              "CDF",
              "CHF",
              "CLP",
              "CNY",
              "COP",
              "CRC",
              "CUP",
              "CVE",
              "CZK",
              "DJF",
              "DKK",
              "DOP",
              "DZD",
              "EGP",
              "ERN",
              "ETB",
              "EUR",
              "FJD",
              "FKP",
              "FOK",
              "GBP",
              "GEL",
              "GGP",
              "GHS",
              "GIP",
              "GMD",
              "GNF",
              "GTQ",
              "GYD",
              "HKD",
              "HNL",
              "HRK",
              "HTG",
              "HUF",
              "IDR",
              "ILS",
              "IMP",
              "INR",
              "IQD",
              "IRR",
              "ISK",
              "JEP",
              "JMD",
              "JOD",
              "JPY",
              "KES",
              "KGS",
              "KHR",
              "KID",
              "KMF",
              "KRW",
              "KWD",
              "KYD",
              "KZT",
              "LAK",
              "LBP",
              "LKR",
              "LRD",
              "LSL",
              "LYD",
              "MAD",
              "MDL",
              "MGA",
              "MKD",
              "MMK",
              "MNT",
              "MOP",
              "MRU",
              "MUR",
              "MVR",
              "MWK",
              "MXN",
              "MYR",
              "MZN",
              "NAD",
              "NGN",
              "NIO",
              "NOK",
              "NPR",
              "NZD",
              "OMR",
              "PAB",
              "PEN",
              "PGK",
              "PHP",
              "PKR",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "RWF",
              "SAR",
              "SBD",
              "SCR",
              "SDG",
              "SEK",
              "SGD",
              "SHP",
              "SLE",
              "SOS",
              "SRD",
              "SSP",
              "STN",
              "SYP",
              "SZL",
              "THB",
              "TJS",
              "TMT",
              "TND",
              "TOP",
              "TRY",
              "TTD",
              "TVD",
              "TWD",
              "TZS",
              "UAH",
              "UGX",
              "USD",
              "UYU",
              "UZS",
              "VES",
              "VND",
              "VUV",
              "WST",
              "XAF",
              "XCD",
              "XDR",
              "XOF",
              "XPF",
              "YER",
              "ZAR",
              "ZMW",
              "ZWL",
            ],
            description:
              "Target currency code. You can infer this from the users request.",
          },
          amount: {
            type: "number",
            description: "Money amount that user wants to exchange.",
          },
        },
        required: ["baseCurreny", "targetCurrency"],
      },
    },
  },
];

const messages: ChatCompletionMessageParam[] = [
  {
    role: "system",
    content: `You are a helpful assistant. Do not make assumptions about what values to plug into functions. Ask for clarification if a user request is ambiguous.`,
  },
];

export const queryChatGpt = async (userPrompt: string): Promise<string> => {
  messages.push({
    role: "user",
    content: userPrompt,
  });

  const chatCompletionRes = await openAiChatComplete(messages);

  const assistantMessage = chatCompletionRes.choices[0].message;
  if (assistantMessage.tool_calls) {
    assistantMessage.content = JSON.stringify(
      assistantMessage.tool_calls[0].function
    );

    messages.push(assistantMessage);

    const results = await executeFunctionCall(assistantMessage.tool_calls[0]);
    messages.push({
      role: "tool",
      tool_call_id: assistantMessage.tool_calls[0].id,
      content: results,
    });

    return results;
  } else {
    messages.push(assistantMessage);
  }

  return assistantMessage.content;
};

const openAiChatComplete = async (
  messages: ChatCompletionMessageParam[]
): Promise<ChatCompletion> => {
  try {
    const openAiRes = await openai.chat.completions.create({
      messages,
      model: "gpt-3.5-turbo",
      tools,
    });

    return openAiRes;
  } catch (error) {
    throw Error(`OpenAI Chat Completion call failed. ${error}`);
  }
};

const executeFunctionCall = async (toolCall: ChatCompletionMessageToolCall) => {
  if (toolCall.function.name === "getCurrentWeather") {
    const args = JSON.parse(toolCall.function.arguments);
    return await getCurrentWeather(args);
  } else if (toolCall.function.name === "getCurrentExchangeRate") {
    const args = JSON.parse(toolCall.function.arguments);
    return await getCurrentExchangeRate(args);
  }

  throw Error(`tool call function ${toolCall.function.name} does not exist`);
};
